1. When using shell scrapping, do not forget to enclose your URL
with "".

2. You can run the following command
> response.css("title")

This will produce a list like object, more precisely a SelectorList
which is a list of Selector objects. This selector objects condensate
information of XML/HTML format of the URL and allow further queries

3. It is usefull to open browser developer tool in parallel to better
understand what is happening.
This indicates that title is a tag, that is, a section as this:
<tag> Some text </tag>

4. To get the text between the tags, you can run the following
> response.css("title::text").getall()

before .get all(), you will only get a Selector object.
<tag>::text is part of the css syntax to get only the text
You can compare the output with the following:
> response.css("title").getall()

5. See that output of 4 is a list. You can retrieve only the first
returned item by:
> response.css("title::text").get()

or
> response.css("title::text")[0].get()

but it is IMPORTANT to no that acessing by indexing your return an
IndexError in case of no results. So avoid this, and use the first
option, which returns None in case of no results

You can also use regular expressions, try these ones:
> response.css("title::text").re(r"Quotes.*")

or
> response.css("title::text").re(r"Q\w+")

or
> response.css("title::text").re(r"(\w+) to (\w+)")


